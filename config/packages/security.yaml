security:
    encoders:
        App\Entity\Tourist:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Tourist
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        tourist:
            pattern: ^/api/tourists
            methods: [PUT,PATCH,DELETE]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        poi:
            pattern:   ^/api/pois
            methods: [PUT,PATCH,DELETE,POST]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        review:
            pattern:   ^/api/reviews
            methods: [PUT,PATCH,DELETE,POST]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        media:
            pattern:   ^/api/(audios|photos)
            methods: [PUT,PATCH,DELETE,POST]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        desc:
            pattern: ^api/descriptions
            methods: [PUT,PATCH,DELETE,POST]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        city:
            pattern:   ^/api/cities
            methods: [PUT,PATCH,DELETE,POST]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        typeofattraction:
            pattern:   ^/api/type_of_attractions
            methods: [PUT,PATCH,DELETE,POST]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        language:
            pattern:  ^api/languages
            methods: [PUT,PATCH,DELETE,POST]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/reviews,roles: IS_AUTHENTICATED_FULLY, methods:['POST','PUT','DELETE','PATCH']}
        - { path: ^/api,        roles:[ROLE_ADMIN], methods:['DELETE','PATCH']}
        - { path: ^/api/pois,   roles:[IS_AUTHENTICATED_FULLY,ROLE_ADMIN], methods:['PUT']}
        - { path: ^/api/tourists, roles: [IS_AUTHENTICATED_FULLY,ROLE_ADMIN], methods:['PUT']}
        - { path: ^/api/cities, roles: [ROLE_ADMIN], methods:['POST','PUT']}
        - { path: ^/api/type_of_attractions, roles: ROLE_ADMIN, methods:['POST','PUT']}
        - { path: ^/api/audios, roles: ROLE_ADMIN, methods:['POST','PUT']}
        - { path: ^/api/reviews,roles: IS_AUTHENTICATED_FULLY, methods:['POST','PUT']}
        - { path: ^/api/cities, roles: IS_AUTHENTICATED_FULLY, methods:['POST','PUT']}
        - { path: ^/api/descriptions, roles: ROLE_ADMIN, methods:['POST','PUT']}
        - { path: ^/api/languages, roles: ROLE_ADMIN, methods:['POST','PUT']}
        - { path: ^/api/login,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh,roles: IS_AUTHENTICATED_ANONYMOUSLY}
